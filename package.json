{
  "name": "faasjs-mono",
  "version": "0.0.3-beta.17",
  "scripts": {
    "lint": "eslint --ext .js,.ts,.tsx .",
    "test": "RUST_BACKTRACE=full jest --ci --silent --coverage --forceExit --detectOpenHandles",
    "pub": "node publish.js",
    "clean": "rm -rf packages/*/node_modules packages/*/dist packages/*/coverage packages/*/*.log tmp *.log",
    "build": "node build.js",
    "build:types": "node build-types.js",
    "build:doc": "typedoc",
    "build:docs": "node build-docs.js"
  },
  "devDependencies": {
    "@faasjs/eslint-config-recommended": "file:./packages/eslint-config-recommended",
    "@faasjs/eslint-config-react": "file:./packages/eslint-config-react",
    "@faasjs/jest": "file:./packages/jest",
    "faasjs": "file:./packages/faasjs",
    "typedoc": "*",
    "typedoc-plugin-markdown": "*",
    "tsup": "^5",
    "typescript": "*"
  },
  "eslintConfig": {
    "ignorePatterns": [
      "**/examples",
      "**/lib",
      "**/dist",
      "**/tmp"
    ],
    "extends": [
      "@faasjs/recommended",
      "@faasjs/react"
    ]
  },
  "workspaces": [
    "packages/*"
  ],
  "jest": {
    "transform": {
      ".(jsx|tsx?)": "./packages/jest/index.js"
    },
    "verbose": true,
    "testPathIgnorePatterns": [
      "/lib/",
      "/tmp/",
      "/examples/",
      "/benchmarks/",
      "/packages/deployer/"
    ],
    "collectCoverageFrom": [
      "**/packages/**/*.ts",
      "**/packages/**/*.tsx",
      "!**/local/**"
    ],
    "testRegex": "/*\\.test\\.tsx?$",
    "coveragePathIgnorePatterns": [
      "/lib/",
      "/dist/",
      "/tmp/",
      "/__tests__/",
      "/examples/",
      "!*.d.ts"
    ],
    "moduleNameMapper": {
      "\\.(css|less|sass|jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "@faasjs/jest",
      "@faasjs/(.*)": "<rootDir>/packages/$1/src",
      "lodash-es": "lodash"
    },
    "setupFiles": [
      "./packages/test/src/jest.setup"
    ],
    "setupFilesAfterEnv": [
      "./packages/ant-design/src/__tests__/jest.setup"
    ],
    "testEnvironmentOptions": {
      "customExportConditions": ["node", "node-addons"]
   }
  }
}
